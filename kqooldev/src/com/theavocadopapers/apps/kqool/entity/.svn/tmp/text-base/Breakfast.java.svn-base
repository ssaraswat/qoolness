package com.theavocadopapers.apps.kqool.entity;

import java.util.Date;
import java.util.List;

import com.theavocadopapers.core.logging.Logger;

public class Breakfast extends AbstractDbObject {
	
	private static final Class currentClass=Breakfast.class;

	private static final Logger logger = Logger.getLogger(currentClass);
	
	protected int breakfastId;
	protected String data;
	protected int adminUserId;
	
	public static Breakfast getById(final int id) {
		return (Breakfast)getById(currentClass, id, false);
	}
	
	@Override
	protected Comparable getComparableValue() {
		return new Integer(getId());
	}
	
	public int getBreakfastId() {
		return breakfastId;
	}

	public void setBreakfastId(int breakfastId) {
		this.breakfastId = breakfastId;
	}

	public String getData() {
		return data;
	}

	public void setData(String data) {
		this.data = data;
	}

	public int getAdminUserId() {
		return adminUserId;
	}

	public void setAdminUserId(int adminUserId) {
		this.adminUserId = adminUserId;
	}


	public static List getAll() {
		return getAll(currentClass);
	}
	
	public static Breakfast getByUserId(final int userId) {
		return (Breakfast)getUniqueByField("adminUserId",""+userId, FIELD_TYPE_NUMERIC, currentClass, false);
	}
	
//	public static String getExistingMealbyId(Breakfast obj){
//		return (String)getExistMealByField(obj,currentClass,false);
//	}
	

}
